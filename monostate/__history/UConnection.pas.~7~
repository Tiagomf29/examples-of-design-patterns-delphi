unit UConnection;

interface
uses
  Vcl.Dialogs, System.SysUtils, System.Classes, Generics.Collections;

type
  TConnection = class

    private
      FConexao : TConnection;
      class var listCodes : TList<Integer>;
      class var listConection : TList<Integer>;

    public
      constructor Create();
      procedure includeCodes(ACode: Integer);
      procedure isConnected();
      procedure isQuantityConnection();
      procedure listCodesIncludes();

  end;

implementation

{ TConexao }

constructor TConnection.create;
begin
  listConection.Add(1);
end;

procedure TConnection.includeCodes(ACode: Integer);
begin
  listCodes.Add(Acode);
end;

procedure TConnection.isConnected;
begin
  if(FConexao <> nil) then
    ShowMessage('Conected!!')
  else
    ShowMessage('Not conected!!')
end;

procedure TConnection.isQuantityConnection;
begin
  ShowMessage(IntToStr(listConection.Count));
end;


procedure TConnection.listCodesIncludes;
var
  i : Integer;
begin
  for i := 0 to listCodes.Count -1 do
      ShowMessage(IntToStr(listCodes[i]));
end;

end.
